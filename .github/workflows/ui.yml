name: UI
on: pull_request
jobs:
  ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - name: Extract PR number
        run: |
          echo ::set-env name=PR_NUMBER::$(echo "$GITHUB_REF" | awk -F / '{print $3}')
      - id: change
        run: |
          git fetch --quiet
          if git diff --quiet origin/${{ github.event.pull_request.head.ref }}..origin/${{ github.event.pull_request.base.ref }} -- sentrei/ui; then
            echo ::set-output name=changed::false && exit 0
          else
            echo ::set-output name=changed::true && exit 0
          fi
      - name: Install dependencies with yarn
        if: steps.change.outputs.changed == 'true' && steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - if: steps.change.outputs.changed == 'true'
        working-directory: sentrei/web
        run: |
          yarn run build
      - if: steps.change.outputs.changed == 'true'
        working-directory: sentrei/web
        run: |
          yarn run test
      - name: Upload coverage to Codecov
        if: steps.change.outputs.changed == 'true'
        uses: codecov/codecov-action@v1
        with:
          file: sentrei/web/coverage/lcov.info
          name: sentrei
          fail_ci_if_error: true
          flags: web
      - name: Dispatch storybook event
        if: steps.change.outputs.changed == 'true'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: deploy-cmd
          client-payload: '{"branch": "${{ github.event.pull_request.head.ref }}", "environment": "staging", "event_name": "storybook", "task": "staging-storybook", "url_prefix": "staging."}'
      - name: Dispatch web event
        if: steps.change.outputs.changed == 'true'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: deploy-cmd
          client-payload: '{"branch": "${{ github.event.pull_request.head.ref }}", "environment": "staging", "event_name": "web", "task": "staging-${{ github.event.pull_request.base.ref }}", "url_prefix": "staging.${{ github.event.pull_request.base.ref }}.", "base": "${{ github.event.pull_request.base.ref }}"}'
      - if: steps.change.outputs.changed == 'true'
        id: secrets
        uses: GoogleCloudPlatform/github-actions/get-secretmanager-secrets@master
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          secrets: |-
            DOCKER_USERNAME:sentrei-master/docker_username
            DOCKER_PASSWORD:sentrei-master/docker_password
            SERVICE_ACCOUNT_EMAIL:sentrei-master/github_${{ github.event.pull_request.base.ref }}_email
            SERVICE_ACCOUNT_KEY:sentrei-master/github_${{ github.event.pull_request.base.ref }}_key
      - if: steps.change.outputs.changed == 'true'
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "286.0.0"
          service_account_email: ${{ steps.secrets.outputs.SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ steps.secrets.outputs.SERVICE_ACCOUNT_KEY }}
          project_id: "sentrei-${{ github.event.pull_request.base.ref }}"
          export_default_credentials: true
      - if: steps.change.outputs.changed == 'true'
        working-directory: sentrei/web
        run: |
          npx reg-suit run
