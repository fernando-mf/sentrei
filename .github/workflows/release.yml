name: Release
on:
  push:
    branches:
      - alpha
      - beta
      - master
  repository_dispatch:
    types: [release-cmd]
env:
  flutter_channel: "stable"
  flutter_version: "1.12.13+hotfix.9"
jobs:
  context:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.branch.outputs.branch }}
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo $GITHUB_CONTEXT
      - name: Extract branch name
        id: branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
  release:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: context
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          always-auth: false
          node-version: "13.x"
          registry-url: https://registry.npmjs.org
          scope: "@sentrei"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Cache node modules
        id: yarn
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - name: Install dependencies with yarn
        if: steps.yarn.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - name: Release
        run: |
          yarn run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update package versions
        run: |
          version=$(node -pe "require('./package.json').version")
          sed -i -e "s/^version: .*/version: $version/" sentrei/mobile/pubspec.yaml
          for i in $(find sentrei -name package.json); do
            sed -i -e "s/^  \"version\": .*/  \"version\": \"$version\",/" $i
            cat $i
          done
      - name: Publish
        run: |
          npm whoami
          git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          git stash && yarn run publish && git stash pop || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Run yarn fix
        run: |
          yarn run fix
      - name: Create a pull request if updated
        uses: peter-evans/create-pull-request@v2
        with:
          branch-suffix: short-commit-hash
          token: ${{ secrets.ACCESS_TOKEN }}
          title: "chore: [sentrei-auto-pr]"
        env:
          HUSKY_SKIP_HOOKS: 1
      - name: Dispatch fastlane event
        if: contains(toJson(github.event.commits), '[sentrei-auto-pr]') == true
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: fastlane-cmd
          client-payload: '{"branch": "${{ needs.context.outputs.branch }}", "event_name": "release", "release": "false"}'
  design:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: context
    steps:
      - name: Dispatch design event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: deploy-cmd
          client-payload: '{"branch": "${{ needs.context.outputs.branch }}", "environment": "production", "event_name": "design", "task": "design", "url_prefix": ""}'
  mobile:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: context
    steps:
      - name: Dispatch mobile event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: deploy-cmd
          client-payload: '{"branch": "${{ needs.context.outputs.branch }}", "environment": "production", "event_name": "mobile", "task": "${{ needs.context.outputs.branch }}", "url_prefix": "${{ needs.context.outputs.branch }}."}'
  storybook:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: context
    steps:
      - name: Dispatch storybook event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: deploy-cmd
          client-payload: '{"branch": "${{ needs.context.outputs.branch }}", "environment": "production", "event_name": "storybook", "task": "storybook", "url_prefix": ""}'
  web:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: context
    steps:
      - name: Dispatch web event
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: deploy-cmd
          client-payload: '{"branch": "${{ needs.context.outputs.branch }}", "environment": "production", "event_name": "web", "task": "${{ needs.context.outputs.branch }}", "url_prefix": "${{ needs.context.outputs.branch }}.", "base": "${{ needs.context.outputs.branch }}"}'
  fastlane:
    runs-on: ubuntu-latest
    steps:
      - name: Dispatch fastlane event
        if: github.event.client_payload != null
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: fastlane-cmd
          client-payload: '{"branch": "${{ github.event.client_payload.slash_command.arg1 }}", "event_name": "release", "release": "true"}'
