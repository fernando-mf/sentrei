name: Release
on:
  push:
    branches:
      - alpha
      - beta
      - master
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Cache node modules
        id: yarn
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - name: Install dependencies with yarn
        if: steps.yarn.outputs.cache-hit != 'true'
        run: |
          yarn install
      - name: Release
        run: |
          yarn run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Restore yarn.lock
        run: |
          git restore yarn.lock
      - name: Refactor pubspec.yaml
        run: |
          version=$(node -pe "require('./package.json').version")
          sed -i -e "s/^version: .*/version: $version/" pubspec.yaml
      - name: Run yarn fix
        run: |
          yarn run fix
      - name: Create a pull request if updated
        uses: peter-evans/create-pull-request@v2
        with:
          branch-suffix: short-commit-hash
          token: ${{ secrets.ACCESS_TOKEN }}
          title: "[ci skip]"
        env:
          HUSKY_SKIP_HOOKS: 1
  deploy:
    runs-on: macos-latest
    needs: [release]
    strategy:
      fail-fast: false
      matrix:
        platform: [android, ios]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.x"
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: "1.12.13+hotfix.8"
      - name: Install bundler
        run: |
          gem install bundler
      - name: Install firebase
        run: |
          npm install -g firebase-tools
      - name: Cache bundler
        id: bundler
        uses: actions/cache@v1
        with:
          path: ${{ matrix.platform }}/vendor/bundle
          key: gem-v1-${{ matrix.platform }}-${{ hashFiles('android/Gemfile.lock') }}
          restore-keys: |
            gem-v1-${{ matrix.platform }}-
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: branch
      - run: flutter pub get
      - run: flutter test
      - name: Run android apk
        if: matrix.platform == 'android'
        run: |
          flutter build apk --flavor ${{ github.base_ref }}
      - name: Install dependencies with bundler
        # if: steps.bundler.outputs.cache-hit != 'true'
        run: |
          cd ${{ matrix.platform }}
          bundle update --bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3 --deployment
      - name: Run fastlane
        run: |
          cd ${{ matrix.platform }}
          bundle exec fastlane ${{ steps.branch.outputs.branch }}
        env:
          FIREBASE_APP_ID_BETA_ANDROID: ${{ secrets.FIREBASE_APP_ID_BETA_ANDROID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER
