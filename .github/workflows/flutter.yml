name: Flutter
on: pull_request
env:
  flutter_channel: "stable"
  flutter_version: "1.12.13+hotfix.8"
jobs:
  flutter:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 3
      - uses: marceloprado/has-changed-path@master
        id: changed-flutter
        with:
          paths: sentrei
      - name: Cache flutter
        if: steps.changed-flutter.outputs.changed == 'true'
        uses: actions/cache@v1
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: flutter-v1-${{ env.flutter_version }}
          restore-keys: |
            flutter-v1-
      - name: Cache pub
        if: steps.changed-flutter.outputs.changed == 'true'
        uses: actions/cache@v1
        with:
          path: ~/.pub-cache
          key: pub-v1-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            pub-v1-
      - name: Install flutter
        if: steps.changed-flutter.outputs.changed == 'true'
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}
      - if: steps.changed-flutter.outputs.changed == 'true'
      - run: |
          cd sentrei
          flutter pub get
          flutter analyze
          flutter test --coverage
      - name: Upload coverage to Codecov
        if: steps.changed-flutter.outputs.changed == 'true'
        uses: codecov/codecov-action@v1
        with:
          file: sentrei/coverage/lcov.info
          name: sentrei
          fail_ci_if_error: true
          flags: test
  # drive:
  #   runs-on: macos-latest
  #   strategy:
  #     fail-fast: true
  #     matrix:
  #       platform: [android, ios]
  #       version: [0, 1]
  #       include:
  #         - platform: android
  #           version: 0
  #           api-level: 21
  #           target: default
  #         - platform: android
  #           version: 1
  #           api-level: 29
  #           target: default
  #         - platform: ios
  #           version: 0
  #           device: "iPhone 8 (13.3)"
  #         - platform: ios
  #           version: 1
  #           device: "iPhone 11 Pro Max (13.3)"
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Cache flutter
  #       uses: actions/cache@v1
  #       with:
  #         path: /Users/runner/hostedtoolcache/flutter
  #         key: flutter-v1-${{ env.flutter_version }}
  #         restore-keys: |
  #           flutter-v1-
  #     - name: Cache pub
  #       uses: actions/cache@v1
  #       with:
  #         path: ~/.pub-cache
  #         key: pub-v1-${{ hashFiles('**/pubspec.lock') }}
  #         restore-keys: |
  #           pub-v1-
  #     - uses: subosito/flutter-action@v1
  #       with:
  #         channel: ${{ env.flutter_channel }}
  #         flutter-version: ${{ env.flutter_version }}
  #     - run: flutter pub get
  #     - name: Run android drive
  #       if: matrix.platform == 'android'
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: ${{ matrix.api-level }}
  #         target: ${{ matrix.target }}
  #         arch: x86_64
  #         profile: Nexus 6
  #         script: "flutter drive --target=test_driver/driver.dart --flavor ${{ github.base_ref }}"
  #     - name: Run ios drive
  #       if: matrix.platform == 'ios'
  #       run: |
  #         xcrun instruments -s
  #         UDID=$(
  #           xcrun instruments -s |
  #           awk \
  #             -F ' *[][]' \
  #             -v 'device=${{ matrix.device }}' \
  #             '$1 == device { print $2 }'
  #         )
  #         xcrun simctl boot "${UDID:?No Simulator with this name found}"
  #         flutter drive --target=test_driver/driver.dart --flavor ${{ github.base_ref }}
