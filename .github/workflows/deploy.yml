name: Deploy
on:
  repository_dispatch:
    types: [deploy-cmd]
env:
  flutter_channel: "stable"
  flutter_version: "1.12.13+hotfix.9"
jobs:
  design:
    if: github.event.client_payload.event_name == 'design'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - name: Install dependencies with yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}design.sentrei.com
      - name: Deploy to firebase
        working-directory: sentrei/design
        run: |
          yarn run ${{ github.event.client_payload.task }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deployment success
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}design.sentrei.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Deployment failure
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}design.sentrei.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Dispatch event
        if: github.event.client_payload.environment == 'staging'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: lighthouse-cmd
          client-payload: '{"url": "https://${{ github.event.client_payload.url_prefix }}design.sentrei.com"}'
  mobile:
    if: github.event.client_payload.event_name == 'mobile'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}
      - name: Install dependencies with yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - name: Generate docs
        working-directory: sentrei/mobile
        run: |
          flutter pub global activate dartdoc
          flutter pub global run dartdoc:dartdoc --exclude 'dart:async,dart:collection,dart:convert,dart:core,dart:developer,dart:io,dart:isolate,dart:math,dart:typed_data,dart:ui,dart:ffi,dart:html,dart:js,dart:js_util'
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com
      - name: Deploy to firebase
        working-directory: sentrei/mobile
        run: |
          yarn run ${{ github.event.client_payload.task }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deployment success
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Deployment failure
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Dispatch event
        if: github.event.client_payload.environment == 'staging'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: lighthouse-cmd
          client-payload: '{"url": "https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com"}'
  web:
    if: github.event.client_payload.event_name == 'web'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: "13.x"
      - name: Cache node modules
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - name: Install dependencies with yarn
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - name: Create GitHub deployment
        uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}sentrei.com
      # - id: secrets
      #   uses: GoogleCloudPlatform/github-actions/get-secretmanager-secrets@master
      #   with:
      #     credentials: ${{ secrets.gcp_credentials }}
      #     secrets: |-
      #       token:sentrei-master/docker
      - name: Deploy to firebase
        working-directory: sentrei/web
        run: |
          yarn run ${{ github.event.client_payload.task }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Deployment success
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}sentrei.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Deployment failure
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}sentrei.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - name: Dispatch event
        if: github.event.client_payload.environment == 'staging'
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: lighthouse-cmd
          client-payload: '{"url": "https://${{ github.event.client_payload.url_prefix }}sentrei.com"}'
