name: Deploy
on:
  repository_dispatch:
    types: [deploy-cmd]
env:
  flutter_channel: "stable"
  flutter_version: "1.12.13+hotfix.9"
jobs:
  design:
    if: github.event.client_payload.event_name == 'design'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}design.sentrei.com
      - working-directory: packages/design
        run: |
          yarn run ${{ github.event.client_payload.task }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}design.sentrei.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}design.sentrei.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: lighthouse-cmd
          client-payload: '{"url": "https://${{ github.event.client_payload.url_prefix }}design.sentrei.com"}'
  mobile:
    if: github.event.client_payload.event_name == 'mobile'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - working-directory: packages/mobile
        run: |
          flutter pub global activate dartdoc
          flutter pub global run dartdoc:dartdoc --exclude 'dart:async,dart:collection,dart:convert,dart:core,dart:developer,dart:io,dart:isolate,dart:math,dart:typed_data,dart:ui,dart:ffi,dart:html,dart:js,dart:js_util'
      - uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com
      - working-directory: packages/mobile
        run: |
          yarn run ${{ github.event.client_payload.task }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: lighthouse-cmd
          client-payload: '{"url": "https://${{ github.event.client_payload.url_prefix }}mobile.sentrei.com"}'
  ui:
    if: github.event.client_payload.event_name == 'ui'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}ui.sentrei.com
      - working-directory: packages/ui
        run: |
          yarn run ${{ github.event.client_payload.task }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}ui.sentrei.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}ui.sentrei.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: lighthouse-cmd
          client-payload: '{"url": "https://${{ github.event.client_payload.url_prefix }}ui.sentrei.com"}'
  web:
    if: github.event.client_payload.event_name == 'web'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: node-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            node-v1-
      - if: steps.cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile
      - uses: chrnorm/deployment-action@releases/v1
        id: deployment
        with:
          environment: ${{ github.event.client_payload.environment }}
          ref: ${{ github.event.client_payload.branch }}
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}sentrei.com
      - id: secrets
        uses: GoogleCloudPlatform/github-actions/get-secretmanager-secrets@master
        with:
          credentials: ${{ secrets.GCP_CREDENTIALS }}
          secrets: |-
            DOCKER_USERNAME:sentrei-master/docker_username
            DOCKER_PASSWORD:sentrei-master/docker_password
            SERVICE_ACCOUNT_EMAIL:sentrei-master/github_${{ github.event.client_payload.base }}_email
            SERVICE_ACCOUNT_KEY:sentrei-master/github_${{ github.event.client_payload.base }}_key
      - uses: docker/build-push-action@v1
        with:
          username: ${{ steps.secrets.outputs.DOCKER_USERNAME }}
          password: ${{ steps.secrets.outputs.DOCKER_PASSWORD }}
          repository: ${{ github.repository }}
          tags: ${{ github.event.client_payload.task }}
          always_pull: true
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true
          push: true
      - uses: docker/build-push-action@v1
        with:
          username: _json_key
          password: ${{ steps.secrets.outputs.SERVICE_ACCOUNT_KEY }}
          registry: gcr.io
          repository: sentrei-${{ github.event.client_payload.base }}/sentrei
          tags: ${{ github.event.client_payload.task }}
          always_pull: false
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true
          push: true
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: "286.0.0"
          service_account_email: ${{ steps.secrets.outputs.SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ steps.secrets.outputs.SERVICE_ACCOUNT_KEY }}
          project_id: "sentrei-${{ github.event.client_payload.base }}"
      - run: |
          gcloud run deploy "sentrei-${{ github.event.client_payload.task }}-web" \
            --image "gcr.io/sentrei-${{ github.event.client_payload.base }}/sentrei:${{ github.event.client_payload.task }}" \
            --platform "managed" \
            --region "us-central1" \
            --allow-unauthenticated \
            --quiet
      - working-directory: packages/web
        run: |
          yarn run ${{ github.event.client_payload.task }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}sentrei.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          target_url: https://${{ github.event.client_payload.url_prefix }}sentrei.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          event-type: lighthouse-cmd
          client-payload: '{"url": "https://${{ github.event.client_payload.url_prefix }}sentrei.com"}'
