name: Test
on:
  push
  # schedule:
  #   - cron: "0 0,8,16 * * *"
env:
  flutter_channel: "stable"
  flutter_version: "1.12.13+hotfix.8"
jobs:
  test:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        platform: [android]
        scheme: [master]
        # scheme: [alpha, beta, master]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # with:
        #   ref: ${{ matrix.scheme }}
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.x"
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - name: Install bundler
        run: |
          gem install bundler
      - name: Install firebase
        run: |
          npm install -g firebase-tools
      - name: Cache bundler
        id: bundler
        uses: actions/cache@v1
        with:
          path: ${{ matrix.platform }}/vendor/bundle
          key: gem-v1-${{ matrix.platform }}-${{ hashFiles('**/${{ matrix.platform }}/Gemfile.lock') }}
          restore-keys: |
            gem-v1-${{ matrix.platform }}-
      - name: Cache flutter
        uses: actions/cache@v1
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: flutter-v1-${{ env.flutter_version }}
          restore-keys: |
            flutter-v1-
      - name: Cache pub
        uses: actions/cache@v1
        with:
          path: ~/.pub-cache
          key: pub-v1-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            pub-v1-
      - uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}
      - name: Decrypt secrets
        if: matrix.platform == 'android'
        run: |
          cd ${{ matrix.platform }}/key
          gpg --quiet --batch --yes --decrypt --passphrase="$SENTREI_PASSPHRASE" \
          --output api.json api.json.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="$SENTREI_PASSPHRASE" \
          --output key.jks key.jks.gpg
        env:
          SENTREI_PASSPHRASE: ${{ secrets.SENTREI_PASSPHRASE }}
      - name: Decrypt fastlane
        if: matrix.platform == 'android'
        run: |
          cd ${{ matrix.platform }}/firebase
          gpg --quiet --batch --yes --decrypt --passphrase="$SENTREI_PASSPHRASE" \
          --output sentrei-alpha.json sentrei-alpha.json.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="$SENTREI_PASSPHRASE" \
          --output sentrei-beta.json sentrei-beta.json.gpg
          gpg --quiet --batch --yes --decrypt --passphrase="$SENTREI_PASSPHRASE" \
          --output sentrei-master.json sentrei-master.json.gpg
        env:
          SENTREI_PASSPHRASE: ${{ secrets.SENTREI_PASSPHRASE }}
      - run: flutter pub get
      - name: Run android apk
        if: matrix.platform == 'android'
        run: |
          flutter build apk --flavor ${{ steps.branch.outputs.branch }}
          flutter build appbundle --flavor ${{ steps.branch.outputs.branch }}
        env:
          CI: true
          FCI_KEY_ALIAS: ${{ secrets.FCI_KEY_ALIAS }}
          FCI_KEY_PASSWORD: ${{ secrets.FCI_KEY_PASSWORD }}
          FCI_KEYSTORE_PASSWORD: ${{ secrets.FCI_KEYSTORE_PASSWORD }}
      - name: Run ios ipa
        if: matrix.platform == 'ios'
        run: |
          flutter build ios --no-codesign --release --flavor ${{ matrix.scheme }}
      - name: Install dependencies with bundler
        run: |
          cd ${{ matrix.platform }}
          bundle update --bundler
          bundle config path ./vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Run fastlane
        run: |
          cd ${{ matrix.platform }}
          bundle exec fastlane test ${{ matrix.scheme }}:true
        env:
          CI: true
          FCI_KEY_ALIAS: ${{ secrets.FCI_KEY_ALIAS }}
          FCI_KEY_PASSWORD: ${{ secrets.FCI_KEY_PASSWORD }}
          FCI_KEYSTORE_PASSWORD: ${{ secrets.FCI_KEYSTORE_PASSWORD }}
